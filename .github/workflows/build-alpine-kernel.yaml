name: Alpine Linux

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '48 12 * * *'
  push:
    branches: [ main ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  

jobs:
  call-workflow-passing-data:
    uses: oxide-one/workflow-runner-maker/.github/workflows/spinup.yaml@main
    with:
      name: ${{ format('gha-worker-{0}'), env.GITHUB_RUN_ID }}
    secrets:
      access-token: ${{ secrets.GITHUB_TOKEN }}
      do-access-token: ${{ secrets.DO_ACCESS_KEY }}

  build-x86_64:
    runs-on: self-hosted
    #runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup QEMU static args
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build X86_64 initramfs
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Alpine.dockerfile
          build-args: |
            alpine_version=3.15
            alpine_docker_url=docker.io/library/alpine:3.15
            alpine_flavor=lts virt
            alpine_features=base squashfs network dhcp https
          #platforms: linux/amd64,linux/arm64,linux/ppc64le
          platforms: linux/amd64
          outputs: |
            build
          tags: alpine-kernel

      - name: "Upload x86_64 assets to S3"
        uses: oxide-one/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks 
        env:
          AWS_S3_BUCKET: ${{ secrets.BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_ENDPOINT: "https://${{ secrets.BUCKET_ENDPOINT }}"
          SOURCE_DIR: 'build/x86_64/boot'
          DEST_DIR: 'x86_64'

  build-aarch64:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup QEMU static args
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Build Aarch64 initramfs
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Alpine.dockerfile
          build-args: |
            alpine_version=3.15
            alpine_docker_url=docker.io/library/alpine:3.15
            alpine_flavor=rpi lts virt rpi4
            alpine_features=rpi base squashfs network dhcp https
          #platforms: linux/amd64,linux/arm64,linux/ppc64le
          platforms: linux/arm64
          outputs: |
            build
          tags: alpine-kernel

      - name: "Upload aarch64 assets to S3"
        uses: oxide-one/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks 
        env:
          AWS_S3_BUCKET: ${{ secrets.BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_ENDPOINT: "https://${{ secrets.BUCKET_ENDPOINT }}"
          SOURCE_DIR: 'build/aarch64/boot'
          DEST_DIR: 'aarch64'

  build-raspberrypi:

    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup QEMU static args
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Download Raspberry Pi Bootloader stuff
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Raspberrypi.dockerfile
          platforms: linux/arm64
          build-args: |
            alpine_version=3.15
            alpine_docker_url=docker.io/library/alpine:3.15
          outputs: |
            build
          tags: alpine-kernel

      - name: "Upload Raspberry Pi assets to S3"
        uses: oxide-one/s3-sync-action@master
        with:
          args: --acl public-read
        env:
          AWS_S3_BUCKET: ${{ secrets.BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_ENDPOINT: "https://${{ secrets.BUCKET_ENDPOINT }}"
          SOURCE_DIR: 'build/'
          DEST_DIR: 'aarch64/'
